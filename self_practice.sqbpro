<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/daniel/Desktop/db_for_assignment_2.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1790"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainORDERS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="101"/><column index="3" value="91"/><column index="4" value="124"/><column index="5" value="126"/><column index="6" value="61"/><column index="7" value="36"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="EMPLOYEE" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="59"/><column index="3" value="61"/><column index="4" value="96"/><column index="5" value="139"/><column index="6" value="72"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MABUFACTURER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="88"/><column index="2" value="87"/><column index="3" value="51"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MANUFACTURER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="88"/><column index="2" value="87"/><column index="3" value="51"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDERDETAIL" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="49"/><column index="3" value="60"/><column index="4" value="57"/><column index="5" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDERS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="49"/><column index="2" value="70"/><column index="3" value="70"/><column index="4" value="71"/><column index="5" value="78"/><column index="6" value="74"/><column index="7" value="45"/><column index="8" value="82"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--6
SELECT *
FROM  ORDERS
WHERE  Carrier  = &quot;USPS&quot; OR  Carrier = &quot;FEDEX&quot;;

--7
SELECT *
FROM EMPLOYEE
ORDER BY HireDate DESC;

--8
SELECT ProductID, SUM(UnitPrice*Quantity) AS &quot;TotalSales&quot;
FROM  ORDERDETAIL
GROUP BY ProductID
ORDER BY &quot;TotalSales&quot; DESC;

--9
SELECT DISTINCT(ProductID) 
FROM ORDERDETAIL INNER JOIN ORDERS
ON ORDERDETAIL.OrderID = ORDERS.OrderID
WHERE ORDERS.CustomerID = 4
ORDER BY ProductID DESC;

--10
SELECT CompanyName, ContactName
FROM CUSTOMER INNER JOIN ORDERS
ON CUSTOMER.CustomerID = ORDERS.CustomerID
WHERE  OrderDate = (SELECT MAX(OrderDate) FROM ORDERS);

--11
SELECT ProductID, SUM(UnitPrice*Quantity) AS &quot;Revenue&quot;
FROM ORDERDETAIL
GROUP BY ProductID;

--12
SELECT DISTINCT(CompanyName)
FROM CUSTOMER INNER JOIN ORDERS
ON CUSTOMER.CustomerID = ORDERS.CustomerID
WHERE ORDERS.OrderID IN (SELECT ORDERID FROM ORDERDETAIL
WHERE ProductID = 3);

--13
UPDATE EMPLOYEE 
SET Address  = &quot;requesting information&quot;
WHERE Address IS NULL;

--14
CREATE TABLE SALESMANAGER(
SalesManagerID INTEGER PRIMARY KEY,
Location TEXT NOT NULL UNIQUE,
Budget INTEGER DEFAULT 500,
CustomerID INTEGER,
FOREIGN KEY (SalesManagerID) REFERENCES EMPLOYEE(EmployeeID),
FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID),
CHECK (Budget &gt; 0)
);

--1
SELECT *
FROM EMPLOYEE;

--2
SELECT DISTINCT(Carrier)
FROM ORDERS;

--3
SELECT OrderDate 
FROM ORDERS
WHERE OrderDate &lt; '2012-11-01';

--4
SELECT OrderID, OrderDate, RequiredDate, ShippedDate
FROM ORDERS
WHERE OrderDate BETWEEN '2013-01-01' AND '2013-04-30'
ORDER BY OrderDate DESC, ShippedDate ASC;

--5
SELECT CustomerID
FROM CUSTOMER
WHERE CompanyName LIKE &quot;F%&quot; OR CompanyName LIKE &quot;S%&quot;;

--6
SELECT *
FROM ORDERS
WHERE Carrier != &quot;UPS&quot;;

--7
SELECT *,  (UnitPrice*Quantity) AS &quot;Sales Amount&quot;
FROM ORDERDETAIL
WHERE UnitPrice*Quantity &lt; 70
ORDER By &quot;Sales Amount&quot; ASC;

--8
SELECT *
FROM EMPLOYEE
WHERE Address IS NOT NULL;

--9
SELECT *
FROM CUSTOMER
WHERE State IN (&quot;IL&quot;, &quot;TX&quot;, &quot;NV&quot;);

--10
SELECT COUNT(DISTINCT(ProductID))
FROM ORDERDETAIL;

--11
SELECT COUNT(DISTINCT(CustomerID))
FROM ORDERS;

--12 
SELECT COUNT(CustomerID) FROM CUSTOMER 
WHERE CustomerID NOT IN 
(SELECT DISTINCT(CustomerID) FROM ORDERS);

--13
SELECT *
FROM EMPLOYEE
WHERE HireDate = (SELECT MAX(HireDate) FROM EMPLOYEE);

--14
SELECT SUM(UnitPrice*Quantity) AS &quot;Total Sales&quot;
FROM ORDERDETAIL;

--15
SELECT Carrier,  SUM(FreightCharge) AS &quot;Total Payments&quot;
FROM ORDERS
GROUP BY Carrier;

--16
SELECT Carrier, SUM(FreightCharge)
FROM ORDERS
GROUP BY Carrier
HAVING SUM(FreightCharge) = 
(SELECT MIN(TotalPayment) 
FROM (SELECT SUM(FreightCharge) AS TotalPayment 
FROM  ORDERS GROUP BY Carrier));

--17
CREATE TABLE MANUFACTURER(
ManufacturerID INTEGER PRIMARY KEY NOT NULL,
CompanyName TEXT NOT NULL,
Address TEXT DEFAULT &quot;Tuscon&quot;
);

CREATE TABLE PRODUCT(
ProductID INTEGER PRIMARY KEY,
Category TEXT,
Description TEXT,
ManufacturerID INTEGER,
FOREIGN KEY (ManufacturerID) REFERENCES MANUFACTURER(ManufacturerID)
CHECK(Category = &quot;Electronics&quot; OR Category  = &quot;Household&quot; OR Category = &quot;Grocery&quot;)
);

--18
INSERT INTO MANUFACTURER VALUES(2, &quot;abc&quot;, &quot;Pheonix&quot;);
INSERT INTO MANUFACTURER (ManufacturerID, CompanyName) VALUES (2, &quot;xyz&quot;);
INSERT INTO PRODUCT VALUES(1, &quot;Electronics&quot;,&quot;TV&quot;, 1);

--19
UPDATE EMPLOYEE
SET Address = &quot;Unknown&quot;
WHERE Address IS NULL;

--20
UPDATE ORDERS
SET FreightCharge = 5.5
WHERE Carrier = &quot;UPS&quot;;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
